<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzf.ssm.dao.IRedPacketDao" >
	<!-- 查询红包具体信息 -->
  <select id="getRedPacket" resultType="com.zzf.ssm.entitys.RedPacket" parameterType="java.lang.Long" >
    select id, user_id as userId, amount, send_date as sendDate, total, unit_amount as unitAmount, 
    stock, version, note from T_RED_PACKET where id=#{id}
  </select>
	<!-- 查询红包具体信息 for update-->
  <select id="getRedPacketForUpdate" resultType="com.zzf.ssm.entitys.RedPacket" parameterType="java.lang.Long" >
    select id, user_id as userId, amount, send_date as sendDate, total, unit_amount as unitAmount, 
    stock, version, note from T_RED_PACKET where id=#{id} for update
  </select>
  <!-- 扣减抢红包库存 -->
  <update id="decreaseRedPacket">
    update T_RED_PACKET set stock=stock-1 where id=#{id}
  </update>
  <!-- 通过版本号扣减抢红包，每更新一次，版本增加1，其次增加对版本号的判断 -->
  <update id="decreaseRedPacketForVersion">
    update T_RED_PACKET set stock=stock-1,version=version+1 where id=#{id} and version=#{version}
  </update>
  
   <update id="batchDecreaseRedPacket">
        <!-- 接收list参数，循环着组装sql语句，注意for循环的写法
             separator=";" 代表着每次循环完，在sql后面放一个分号
             item="cus" 循环List的每条的结果集
             collection="list" list 即为 map传过来的参数key -->
        <foreach collection="list" separator=";" item="userRedPacket">
            update T_RED_PACKET set stock = stock-1 where id = #{userRedPacket.redPacketId}
        </foreach>
    </update>
</mapper>